var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = PetroBase","category":"page"},{"location":"#PetroBase.jl","page":"Home","title":"PetroBase.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for the PetroBase.jl package. This is a basic package with some useful type definitions and functions for petrological modelling. This is intended for use with JPerpleX and other modelling packages I have developed to provide an easy way to interoperate between them.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [PetroBase]","category":"page"},{"location":"#PetroBase.PetroBase","page":"Home","title":"PetroBase.PetroBase","text":"Main module for PetroBase, provides basic types and functions to solve petrological problems.\n\nExports\n\nChemical\nComponent\nPetroSystem\nPhase\nTraceElement\nconcentration\nfindchemical\ngibbs\nisunique\nmol\nname\nsum_mass\n≃\n\n\n\n\n\n","category":"module"},{"location":"#PetroBase.Chemical","page":"Home","title":"PetroBase.Chemical","text":"Abstract supertype for chemical components and trace elements\n\n\n\n\n\n","category":"type"},{"location":"#PetroBase.Component","page":"Home","title":"PetroBase.Component","text":"Component(clone; ...)\nComponent(clone, mol; μ)\n\n\nClones the parameters of a 'Component' but with change of 'mol' and/or 'μ'\n\n\n\n\n\n","category":"type"},{"location":"#PetroBase.Component-2","page":"Home","title":"PetroBase.Component","text":"Basic unit in describing composition of a phase or system. Critical to most calculations.  Typically the only values that will ever changed are mol and chemical potential.\n\nname::String: Name of the component\nmolarmass::Float64: Molar mass (g/mol)\nmol::Float64: Moles of the component\nμ::Float64: Chemical potential (J/mol)\n\n\n\n\n\n","category":"type"},{"location":"#PetroBase.PetroSystem","page":"Home","title":"PetroBase.PetroSystem","text":"This type is defined to contain all the most relevant properties of a petrological system, any number of variables can be initialized  and defaults will be 0 or empty arrays/strings. Units are selected based on convenience for petrological modelling.\n\ncomposition::Array{Component}: Composition of the system as defined by a 'Component' array\nphases::Array{Phase}: Phases within the system\ntraceelements::Array{TraceElement}: Concentration of trace elements in the system\nmol::Float64: Total moles of all components in the system\nvol::Float64: Total volume of all phases in the system(J/bar [m^3/10^5])\nmass::Float64: Total mass of the system(g)\nρ::Float64: Density of the system (kg/m^3)\nmolarmass::Float64: Molar mass of the system (kg/m^3)\nG::Float64: Gibbs free energy (J/mol)\nH::Float64: Enthalpy (J/mol)\nS::Float64: Entropy (J/K·mol)\nCp::Float64: Heat capacity (J/K·mol)\nVmol::Float64: Molar volume (J/bar·mol)\nCp_Cv::Float64: Cp/Cv (heat capacity ratio)\nα::Float64: Thermal expansion coefficient(1/K)\nβ::Float64: Compressibility (1/bar)\n\n\n\n\n\n","category":"type"},{"location":"#PetroBase.Phase","page":"Home","title":"PetroBase.Phase","text":"This type is defined to contain all the most relevant properties of a phase, any number of variables can be initialized and defaults will be 0 or empty arrays/strings. Units are selected based on convenience for petrological modelling.\n\nname::String: Name of the phase\ncomposition::Array{Component}: Composition of the phase as defined by a 'Component' array\ntraceelements::Array{TraceElement}: Concentration of trace elements in the phase\nmol::Float64: Number of moles of the phase present in the system\nvol::Float64: Volume of phase present in the system (J/bar [m^3/10^5])\nmass::Float64: Total mass of the phase present in the system (g)\nρ::Float64: Density (kg/m^3)\nmolarmass::Float64: Molar mass (g/mol)\nG::Float64: Gibbs free energy (J/mol)\nH::Float64: Enthalpy (J/mol)\nS::Float64: Entropy (J/mol)\nCp::Float64: Heat capacity (J/K·mol)\nVmol::Float64: Molar volume (J/bar·mol)\nCp_Cv::Float64: Cp/Cv (heat capacity ratio)\nα::Float64: Thermal expansion coefficient(1/K)\nβ::Float64: Compressibility (1/bar)\n\n\n\n\n\n","category":"type"},{"location":"#PetroBase.TraceElement","page":"Home","title":"PetroBase.TraceElement","text":"Describes the trace element concentration of a phase or system. Typically the only value that will change is concentration\n\nname::String: Name of the element\nmolarmass::Float64: Molar mass (g/mol)\nconcentration::Float64: Concentration in the system or phase (µg/g)\n\n\n\n\n\n","category":"type"},{"location":"#PetroBase.TraceElement-Tuple{TraceElement, Real}","page":"Home","title":"PetroBase.TraceElement","text":"TraceElement(clone, conc)\n\n\nClones the parameters of a 'TraceElement' but with change of 'concentration'\n\n\n\n\n\n","category":"method"},{"location":"#Base.:*-Tuple{Component, Real}","page":"Home","title":"Base.:*","text":"*(comp1::Component, num::Real) -> Component\n\n\nMultiplies the 'mol' parameter of 'comp1' by 'num'\n\n\n\n\n\n","category":"method"},{"location":"#Base.:*-Tuple{TraceElement, Real}","page":"Home","title":"Base.:*","text":"*(te1::TraceElement, num::Real) -> TraceElement\n\n\nMultiplies the 'concentration' parameter of 'te1' by 'num'\n\n\n\n\n\n","category":"method"},{"location":"#Base.:+-Tuple{Component, Component}","page":"Home","title":"Base.:+","text":"+(comp1::Component, comp2::Component) -> Component\n\n\nAdds together the 'mol' parameter of two 'Component' variables that have the same name and molar mass. This will return a 'Component' with the chemical potential of the first argument.\n\n\n\n\n\n","category":"method"},{"location":"#Base.:+-Tuple{Component, Real}","page":"Home","title":"Base.:+","text":"+(comp1::Component, num::Real) -> Component\n\n\nAdds 'num' to the 'mol' of 'comp1'\n\n\n\n\n\n","category":"method"},{"location":"#Base.:+-Tuple{TraceElement, Real}","page":"Home","title":"Base.:+","text":"+(te1::TraceElement, num::Real) -> TraceElement\n\n\nAdds 'num' to the 'concentration' paremeter of 'te1'\n\n\n\n\n\n","category":"method"},{"location":"#Base.:+-Tuple{TraceElement, TraceElement}","page":"Home","title":"Base.:+","text":"+(te1::TraceElement, te2::TraceElement) -> TraceElement\n\n\nAdds together the 'concentration' parameter of two 'TraceElement' variables that have the same name and molar mass\n\n\n\n\n\n","category":"method"},{"location":"#Base.:--Tuple{Component, Component}","page":"Home","title":"Base.:-","text":"-(comp1::Component, comp2::Component) -> Component\n\n\nSubtracts the 'mol' parameter of 'comp2' from 'comp1' as long as they have the same name and molar mass. This will return a 'Component' with the chemical potential of the first argument.\n\n\n\n\n\n","category":"method"},{"location":"#Base.:--Tuple{Component, Real}","page":"Home","title":"Base.:-","text":"-(comp1::Component, num::Real) -> Component\n\n\nSubtracts 'num' to the 'mol' parameter of 'comp1'\n\n\n\n\n\n","category":"method"},{"location":"#Base.:--Tuple{TraceElement, Real}","page":"Home","title":"Base.:-","text":"-(te1::TraceElement, num::Real) -> TraceElement\n\n\nSubtracts 'num' to the 'concentration' parameter of 'te1'\n\n\n\n\n\n","category":"method"},{"location":"#Base.:--Tuple{TraceElement, TraceElement}","page":"Home","title":"Base.:-","text":"-(te1::TraceElement, te2::TraceElement) -> TraceElement\n\n\nSubtracts the 'concentration' parameter of 'te2' from 'te1' as long as they have the same name and molar mass\n\n\n\n\n\n","category":"method"},{"location":"#Base.:/-Tuple{Component, Real}","page":"Home","title":"Base.:/","text":"/(comp1::Component, num::Real) -> Component\n\n\nDivides the 'mol' parameter of 'comp1' by 'num'\n\n\n\n\n\n","category":"method"},{"location":"#Base.:/-Tuple{TraceElement, Real}","page":"Home","title":"Base.:/","text":"/(te1::TraceElement, num::Real) -> TraceElement\n\n\nDivides the 'concentration' parameter of 'te1' by 'num'\n\n\n\n\n\n","category":"method"},{"location":"#Base.:≈-Tuple{Chemical, Chemical}","page":"Home","title":"Base.:≈","text":"≈(comp1::Chemical, comp2::Chemical) -> Bool\n\n\nThis is a simple boolean operator that returns true if two 'Chemical' variables have the same name. molar mass, and amount of moles\n\n\n\n\n\n","category":"method"},{"location":"#PetroBase.:≃-Tuple{Chemical, Chemical}","page":"Home","title":"PetroBase.:≃","text":"≃(comp1::Chemical, comp2::Chemical) -> Bool\n\n\nThis is a simple boolean operator that returns true if two 'Chemical' variables have the same name and molar mass\n\n\n\n\n\n","category":"method"},{"location":"#PetroBase.concentration-Tuple{Component}","page":"Home","title":"PetroBase.concentration","text":"concentration(comp::Component) -> Float64\n\n\nReturns the 'mol' of 'comp', useful for broadcasting\n\n\n\n\n\n","category":"method"},{"location":"#PetroBase.concentration-Tuple{TraceElement}","page":"Home","title":"PetroBase.concentration","text":"concentration(te::TraceElement) -> Float64\n\n\nReturns the 'concentration' of a 'TraceElement', useful for broadcasting\n\n\n\n\n\n","category":"method"},{"location":"#PetroBase.findchemical-Tuple{Array{<:Chemical}, Chemical}","page":"Home","title":"PetroBase.findchemical","text":"findchemical(\n    chem::Array{<:Chemical},\n    fChem::Chemical\n) -> Int64\n\n\nFinds the first index of 'fChem' in the 'chem' array. Returns 0 if 'fChem' isnt present. Best used with arrays of unique 'Chemical' variables.\n\n\n\n\n\n","category":"method"},{"location":"#PetroBase.findchemical-Tuple{Array{<:Chemical}, String}","page":"Home","title":"PetroBase.findchemical","text":"findchemical(\n    chem::Array{<:Chemical},\n    fchem::String\n) -> Int64\n\n\nFinds the first index of an element in the 'chem' array with the name of 'fChem'. Returns 0 if 'fChem' isnt present.  Best used with arrays of unique 'Chemical' variables.\n\n\n\n\n\n","category":"method"},{"location":"#PetroBase.gibbs-Tuple{Phase}","page":"Home","title":"PetroBase.gibbs","text":"gibbs(phase::Phase) -> Float64\n\n\nReturns 'G' of 'phase', useful for broadcasting\n\n\n\n\n\n","category":"method"},{"location":"#PetroBase.isunique-Tuple{Array{<:Chemical}}","page":"Home","title":"PetroBase.isunique","text":"isunique(chem::Array{<:Chemical}) -> Bool\n\n\nChecks if each cell in a 'Chemical' array is not repeated elsewhere in the array.\n\n\n\n\n\n","category":"method"},{"location":"#PetroBase.mol-Tuple{Phase}","page":"Home","title":"PetroBase.mol","text":"mol(phase::Phase) -> Float64\n\n\nReturns the 'mol' of 'phase', useful for broadcasting\n\n\n\n\n\n","category":"method"},{"location":"#PetroBase.name-Tuple{Chemical}","page":"Home","title":"PetroBase.name","text":"name(chem::Chemical) -> Any\n\n\nReturns 'name' of a 'chem', useful for broadcasting\n\n\n\n\n\n","category":"method"},{"location":"#PetroBase.sum_mass-Tuple{Array{Component}}","page":"Home","title":"PetroBase.sum_mass","text":"sum_mass(comps::Array{Component}) -> Union{Float64, Int64}\n\n\nCalculates the molar mass of an array of 'Component' variables by adding up the product of the molar mass and mol of each 'Component' in the array. Intent of use is calculating molar mass of a phase that is described using a 'Component' array\n\n\n\n\n\n","category":"method"}]
}
